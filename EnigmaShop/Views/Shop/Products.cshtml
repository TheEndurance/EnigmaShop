@using Microsoft.AspNetCore.Http
@model EnigmaShop.ViewModels.ShopViewModel


<div class="jumbotron">
    <div class="container">
        <h1>
            Shop
        </h1>

    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-4">
            <div class="categories">
                @foreach (var primaryCat in Model.Categories)
                {
                    <h4 class="d-block">@primaryCat.Name</h4>

                    foreach (var secondaryCat in primaryCat.Categories)
                    {
                        <ul class="list-style-none">
                            <li>
                                <a asp-route-primaryCat="@primaryCat.Name" asp-route-secondaryCat="@secondaryCat.Name">@secondaryCat.Name</a>
                            </li>
                            <li>
                                @foreach (var tertiaryCat in secondaryCat.Categories)
                                {
                                    <ul class="list-style-none">
                                        <li>
                                            <a asp-route-primaryCat="@primaryCat.Name" asp-route-secondaryCat="@tertiaryCat.Name">@tertiaryCat.Name</a>
                                        </li>
                                    </ul>
                                }
                            </li>
                        </ul>
                    }
                }
            </div>
            <div class="options mt-5">
                @foreach (var optionGroup in Model.OptionGroups)
                {

                    <h4 class="d-block">@optionGroup.Name</h4>
                    <ul class="list-style-none">
                        @foreach (var option in optionGroup.Options)
                        {
                            <li>
                                <label class="custom-control custom-checkbox">
                                    <input type="checkbox" data-option-id="@option.Id" class="js-option-checkbox custom-control-input" @(Model.OptionIds.Contains(option.Id) ? "checked" : "")>
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">@option.Name</span>
                                </label>
                            </li>
                        }
                    </ul>
                }
            </div>
            <div class="sizes mt-5">
                @foreach (var sizeGroup in Model.SizeGroups)
                {
                    <h4 class="d-block">@sizeGroup.Name</h4>
                    <ul class="list-style-none">
                        @foreach (var size in sizeGroup.Sizes)
                        {
                            <li>
                                <label class="custom-control custom-checkbox">
                                    <input type="checkbox" data-size-id="@size.Id" class="js-size-checkbox custom-control-input" @(Model.SizeIds.Contains(size.Id) ? "checked" : "")>
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description">@size.Name</span>
                                </label>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
        <div class="col-lg-8">
            <div class="row">
                @foreach (var product in Model.Products)
                {
                    <div class="col-lg-4 m-2">
                        <div class="d-flex flex-column">
                            @if (product.MainSKUPicture != null)
                            {
                                <img src="@product.MainSKUPicture.ImageUrl" data-alt-img="@(product.AltSKUPicture!=null ? product.AltSKUPicture.ImageUrl : "")" class="product" />
                            }
                            else
                            {
                                <p>No picture</p>
                            }

                        </div>

                        <div class="text-md-center">@product.Name</div>
                        <div class="text-md-center">@product.Description</div>

                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>

        //javascript way to parse query string
        @*const parser = new DOMParser;
        const dom = (parser.parseFromString("@(Model.CategoryQueryString)", 'text/html'));
        const categoryQueryString = dom.body.textContent;*@


        //asp.net way uses System.Web.HttpUtility.JavaScriptStringEncode(Model.CategoryQueryString)

        /*
        * Initialize URL and variables
        */
        let url =
            `@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}?")`;

        //param names
        const primaryCategoryParamName = "@Model.PrimaryCategoryParamName";
        const secondaryCategoryParamName = "@Model.SecondaryCategoryParamName";
        const optionParamName = "@Model.OptionParamName";
        const sizeParamName = "@Model.SizeParamName";
        const countParamName = "@Model.CountParamName";
        const offsetParamName = "@Model.OffsetParamName";

        // query strings
        const primaryCategory = "@Model.PrimaryCategory";
        const secondaryCategory = "@Model.SecondaryCategory";
        const count = "@Model.Count";
        const offset = "@Model.Offset";

        // checkbox html elements
        const optionCheckboxes = document.querySelectorAll(".js-option-checkbox");
        const sizeCheckboxes = document.querySelectorAll(".js-size-checkbox");

        if (primaryCategory.length > 0) {
            url += `${primaryCategoryParamName}=${primaryCategory}`;
        }
        if (secondaryCategory.length > 0) {
            url += `&${secondaryCategoryParamName}=${secondaryCategory}`;
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////


        /*
        * Gets the currently checked option checkboxes and returns a string (QueryString)
        */
        const GetCheckboxUrl = function(htmlCollectionOfCheckboxes,paramName,dataAttribute) {
            let checked = [];

            htmlCollectionOfCheckboxes.forEach(function(checkbox) {
                if (checkbox.checked) {
                    checked.push(checkbox.getAttribute(dataAttribute));
                }
            });

            let queryString = "";
            for (let i = 0; i < checked.length; i++) {
                queryString += `&${paramName}=${checked[i]}`;
            }
            return queryString;
        };
        ////////////////////////////////////////////////////////////////////////////////////////////////

        /*
        * Gets the currently checked size checkboxes and returns a string (QueryString)
        */
        //const GetSizeUrl = function() {
        //    let checkedSizes = [];

        //    sizeCheckboxes.forEach(function(checkbox) {
        //        if (checkbox.checked) {
        //            checkedSizes.push(checkbox.dataset.sizeId);
        //        }
        //    });

        //    let sizeQueryString = "";
        //    for (let i = 0; i < checkedSizes.length; i++) {
        //        sizeQueryString += `&sizes=${checkedSizes[i]}`;
        //    }
        //    return sizeQueryString;
        //};
        ////////////////////////////////////////////////////////////////////////////////////////////////


        /*
        * Updates browsers Href with a new URL
        */
        const UpdateHref = function() {
            const optionQueryString = GetCheckboxUrl(optionCheckboxes, optionParamName, "data-option-id");
            const sizeQueryString = GetCheckboxUrl(sizeCheckboxes, sizeParamName, "data-size-id");
            window.location.href = `${url}${optionQueryString}${sizeQueryString}`;
        };

        ////////////////////////////////////////////////////////////////////////////////////////////////


        //EVENT LISTENERS

        optionCheckboxes.forEach(checkbox => checkbox.addEventListener("change", UpdateHref, false));
        sizeCheckboxes.forEach(checkbox => checkbox.addEventListener("change", UpdateHref, false));


    </script>
}