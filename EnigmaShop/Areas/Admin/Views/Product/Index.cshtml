@model IEnumerable<EnigmaShop.Areas.Admin.Models.Product>
@{
    ViewData["Title"] = "Index";
}

<section class="tables">
    <div class="container-fluid">
        <div class="row">
                <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header d-flex align-items-center">Products</div>
                    <div class="card-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Primary Category</th>
                                    <th>Categories</th>
                                    <th>SKU Actions</th>
                                    <th>Product Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr id="@item.Id">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </td>
                                        <td>
                                            @item.ProductCategories.Single(x => x.Category.ParentCategoryId == null).Category.Name
                                        </td>
                                        <td>
                                            @foreach (var category in item.ProductCategories.OrderBy(y => y.Order).Select(x => x.Category.Name))
                                            {
                                                <span>@category </span>
                                            }
                                        </td>
                                        <td>
                                            <a asp-action="Create" asp-controller="SKU" asp-route-id="@item.Id">Create SKU</a> |
                                            <a asp-action="Index" asp-controller="SKU" asp-route-id="@item.Id">View SKU's</a>
                                        </td>
                                        <td>
                                            <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa fa-pencil-square-o hover-scale" aria-hidden="true"></i></a> |
                                            <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info hover-scale" aria-hidden="true"></i></a> |
                                            <a href="#" class="js-delete-product" data-product-id="@item.Id"><i class="fa fa-trash-o hover-scale" aria-hidden="true"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts {
<script src="~/lib/bootbox.js/bootbox.js"></script>
    <script>

        const productElements = document.getElementsByClassName("js-delete-product");
        const productArray = Array.prototype.slice.call(productElements);

        const DeleteProductById = function () {
            const productId = this.getAttribute("data-product-id");
            const productTableRow = document.getElementById(productId);
            bootbox.confirm("Are you sure you want to delete this product?",
                function(result) {
                    if (result === true) {
                        const url = "/admin/api/products/" + productId;
                        $.ajax({
                            url: url,
                            type: "DELETE",
                            success: function () {
                                $(productTableRow).fadeOut("fast",
                                    function () {
                                        this.remove();
                                    });
                            },
                            error: function () {
                                bootbox.alert("An error occured while trying to delete the product");
                            }
                        });
                    }
                });
        }

        productArray.map(product => product.addEventListener("click", DeleteProductById, false));

    </script>
}