@model EnigmaShop.Areas.Admin.ViewModels.ProductFormViewModel
@{
    ViewData["Title"] = "Create";
}
<section class="forms">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex align-items-center">
                        <h3 class="h4">Create Product</h3>
                    </div>
                    <div class="card-body">
                        <form class="form-horizontal" asp-action="Create" enctype="multipart/form-data">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <div class="form-group row">
                                <label asp-for="Name" class="form-control-label col-sm-3"></label>
                                <div class="col-sm-9">
                                    <input asp-for="Name" class="form-control" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="line"></div>
                            <div class="form-group row">
                                <label asp-for="Description" class="form-control-label col-sm-3"></label>
                                <div class="col-sm-9">
                                    <input asp-for="Description" class="form-control" />
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="line"></div>
                            <div class="form-group row">
                                <label asp-for="PrimaryCategoryId" class="form-control-label col-sm-3"></label>
                                <div class="col-sm-9">
                                    <select asp-for="PrimaryCategoryId" class="form-control" asp-items="Model.PrimaryCategoryList">
                                        <option>Select a category </option>
                                    </select>
                                </div>
                            </div>
                            <div class="line"></div>
                            <div class="form-group row">
                                <label asp-for="SecondaryCategoryId" class="form-control-label col-sm-3"></label>
                                <div class="col-sm-9">
                                    <select name="SecondaryCategoryId" class="form-control" id="SecondaryCategoryId">
                                        
                                    </select>
                                </div>
                            </div>
                            <div class="line"></div>
                            <div class="form-group row">
                                <label asp-for="TertiaryCategoryId" class="form-control-label col-sm-3"></label>
                                <div class="col-sm-9">
                                    <select name="TertiaryCategoryId" class="form-control" id="TertiaryCategoryId"></select>
                                </div>
                            </div>
                            <div class="line"></div>
                            <div class="form-group row">
                                <div class="col-sm-3"></div>
                                <div class="col-sm-9">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <a asp-action="Index">Back to List</a>
        </div>
    </div>

</section>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {


            function GetCategorySelectList(selectedGroupId,targetSelectId) {
                if (isNaN(selectedGroupId)) {
                    return;
                }
                var url = "/admin/api/categories/" + selectedGroupId;
                $.ajax({
                    url: url,
                    type: "GET",
                    success: function (categories) {
                        var markup = `${categories.map(category => `<option value="${category.id}">${category.name}</option>`)}`;
                        document.querySelector("form #" + targetSelectId).innerHTML = markup;
                    },
                    error: function() {
                        alert("An error occured retrieving categories for the selected category group.");
                    }
                });
            }

            var primaryCategory = document.getElementById("PrimaryCategoryId");
            var secondaryCategory = document.getElementById("SecondaryCategoryId");

            primaryCategory.addEventListener("blur",
                function() { GetCategorySelectList(this.value, "SecondaryCategoryId") },
                false);

            secondaryCategory.addEventListener("blur",
                function() { GetCategorySelectList(this.value, "TertiaryCategoryId") },
                false);

        });
    </script>
}
